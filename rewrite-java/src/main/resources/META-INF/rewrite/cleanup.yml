#
# Copyright 2021 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.cleanup.Cleanup
displayName: Code cleanup
description: Automatically cleanup code, e.g. remove unnecessary parentheses, simplify expressions.
recipeList:
  - org.openrewrite.java.cleanup.DefaultComesLast
  - org.openrewrite.java.cleanup.EmptyBlock
  - org.openrewrite.java.format.EmptyNewlineAtEndOfFile
  - org.openrewrite.java.cleanup.ForLoopControlVariablePostfixOperators
  - org.openrewrite.java.cleanup.FinalizePrivateFields
  - org.openrewrite.java.cleanup.MethodParamPad
  - org.openrewrite.java.cleanup.NoWhitespaceAfter
  - org.openrewrite.java.cleanup.NoWhitespaceBefore
  - org.openrewrite.java.cleanup.PadEmptyForLoopComponents
  - org.openrewrite.java.cleanup.TypecastParenPad
  - org.openrewrite.java.cleanup.EqualsAvoidsNull
  - org.openrewrite.java.cleanup.ExplicitInitialization
  - org.openrewrite.java.cleanup.FallThrough
  - org.openrewrite.java.cleanup.HideUtilityClassConstructor
  - org.openrewrite.java.cleanup.NeedBraces
  - org.openrewrite.java.cleanup.OperatorWrap
  - org.openrewrite.java.cleanup.UnnecessaryParentheses
  - org.openrewrite.java.cleanup.ReplaceThreadRunWithThreadStart
#  - org.openrewrite.java.cleanup.RemoveRedundantTypeCast
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.cleanup.ReplaceThreadRunWithThreadStart
displayName: "Replace calls to `Thread.run()` with `Thread.start()`"
description: "`Thread.run()` should not be called directly."
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: java.lang.Thread run()
      newMethodName: start
tags:
  - RSPEC-1217
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.cleanup.CommonDeclarationSiteTypeVariances
displayName: "Properly use declaration-site type variance for well-known types"
description: "When using a method parameter like `Function<IN, OUT>`, it should rather be `Function<? super IN, ? extends OUT>`. This recipe checks for method parameters of well-known types."
recipeList:
  - org.openrewrite.java.cleanup.DeclarationSiteTypeVariance:
      variantTypes:
        - java.util.function.Consumer<IN>
        - java.util.function.BiPredicate<IN, IN>
        - java.util.function.DoubleFunction<OUT>
        - java.util.function.Function<IN, OUT>
        - java.util.function.IntFunction<OUT>
        - java.util.function.LongFunction<OUT>
        - java.util.function.ObjDoubleConsumer<IN>
        - java.util.function.ObjIntConsumer<IN>
        - java.util.function.ObjLongConsumer<IN>
        - java.util.function.Predicate<IN>
        - java.util.function.Supplier<OUT>
        - java.util.function.ToDoubleBiFunction<IN, IN>
        - java.util.function.ToDoubleFunction<IN>
        - java.util.function.ToIntBiFunction<IN, IN>
        - java.util.function.ToIntFunction<IN>
        - java.util.function.ToLongBiFunction<IN, IN>
        - java.util.function.ToLongFunction<IN>
      excludeBounds:
        - java.lang.*
tags:
  - RSPEC-1217
